name: macos build workflows

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  
permissions:
  contents: read
  
jobs:
  build:
    strategy:
      matrix:
        include:
          - os: macos-13
          - os: macos-14
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout main repository code
        uses: actions/checkout@v4
        with:
          ref: 'master'
        
       # 检出依赖的xengine仓库到指定的xengine目录
      - name: Checkout dependency repository (xengine)
        uses: actions/checkout@v4
        with:
          repository: libxengine/libxengine
          path: libxengine

      - name: sub module checkout (opensource)
        run: |
            git submodule init
            git submodule update

      - name: brew install
        run: /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
            
      # 设置依赖库的环境变量
      - name: Set up Dependency x86_64 Environment 
        if: matrix.os == 'macos-13'
        run: |
            cd libxengine
            chmod 777 *

            sudo mkdir -p /usr/local/include
            sudo mkdir -p /usr/local/lib
            ./XEngine_LINEnv.sh -i 3
            sudo cp -rf ./XEngine_Include /usr/local/include
            sudo find ./XEngine_Mac -name "*.dylib" -exec cp {} /usr/local/lib \;
      - name: Set up Dependency Arm64 Environment 
        if: matrix.os == 'macos-14'
        run: |
            cd libxengine
            chmod 777 *

            sudo mkdir -p /usr/local/include
            sudo mkdir -p /usr/local/lib
            ./XEngine_LINEnv.sh -i 3

            latest_tag=$(curl -s https://api.github.com/repos/libxengine/libxengine/releases/latest | jq -r .tag_name)
            wget https://github.com/libxengine/libxengine/releases/download/$latest_tag/XEngine_Mac_Arm64.zip
            unzip ./XEngine_Mac_Arm64.zip -d ./XEngine_Mac_Arm64
            cd XEngine_Mac_Arm64

            sudo cp -rf ./XEngine_Include /usr/local/include
            sudo find ./XEngine_Mac -name "*.dylib" -exec cp {} /usr/local/lib \;            
      #编译
      - name: make debug
        run: | 
            cd XEngine_Source
            make PLATFORM=mac 
            make PLATFORM=mac FLAGS=InstallAll
            make PLATFORM=mac FLAGS=CleanAll
      - name: make release
        run: |
            cd XEngine_Source
            make PLATFORM=mac RELEASE=1
            make PLATFORM=mac FLAGS=InstallAll
            make PLATFORM=mac FLAGS=CleanAll
      - name: test
        run: |
            cd XEngine_Release
            ./XEngine_CenterApp -t
            ./XEngine_Http2App -t
            ./XEngine_HttpApp -t
            ./XEngine_SimpleApp -t
            ./XEngine_WebSocketApp -t